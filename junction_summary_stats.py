import pandas as pd

input_name = 'chr5_42_15_28'
chromosome = 'chr5'

#POSITIVE STRAND
junctions_file = pd.read_csv(input_name+'_+_junction_spanning.csv')
junctions_file = junctions_file.drop('Unnamed: 0', axis = 1)

# TOTAL JUNCTIONS COVERED BY COMBO OF ALL ENZYMES IN PARALLEL
# number of junctions whithout duplicates - each junction counted once
all_junction_ids = len(set(junctions_file['intron_id']))

#Number of junction covering peptides generated by each enzyme
junction_statistics = pd.DataFrame()
enzymelist = []
total_pept = []
for enzyme in set(junctions_file['enzyme']):
    enzymecheck = junctions_file.apply(lambda x: True if x['enzyme'] == enzyme else False, axis =1)
    enzyme_total = len(enzymecheck[enzymecheck==True])
    enzymelist.append(enzyme)
    total_pept.append(enzyme_total)
junction_statistics['enzyme'] = enzymelist
junction_statistics['junction_spanning_peptides'] = total_pept

for enzyme in set(junctions_file['enzyme']):
    enzymecheck = junctions_file.apply(lambda x: True if x['enzyme'] == enzyme else False, axis =1)
    enzyme_total = len(enzymecheck[enzymecheck==True])
    #print (enzyme, 'has', enzyme_total, 'junction-covering peptides')

#Unique Junctions covered by each separate enzyme
indexed_file = junctions_file.set_index('enzyme')

newlist = []
for enzyme in enzymelist:
    by_enzyme = indexed_file.loc[[enzyme]]
    newlist.append(by_enzyme['intron_id'].tolist())

#for index, (introns, enzyme) in enumerate(zip(newlist, enzymelist)):
#    print('The peptides generated by', enzyme, 'cover a total of', len(set(introns)), 'junctions')

junctions = []
for introns in newlist:
    junctions.append(len(set(introns)))

junction_statistics['unique_junctions_covered'] = junctions

#Real number of exon-exon junctions in the proteins being examined
posstrand_cdsdf = pd.read_csv(chromosome+'_+_cdsdf.csv')
posstrand_cdsdf = posstrand_cdsdf[posstrand_cdsdf.intron_id != 'na']

#print('there are a total of', len(set(cdsdf['intron_id'])),
# 'exon-exon junctions in the observed proteins')

#Adding column for % of junctions covered, out of the available
# junctions in the proteins
junction_statistics['junction_coverage'] = junction_statistics['unique_junctions_covered']/(len(set(posstrand_cdsdf['intron_id']))) *100
junction_statistics.to_csv(input_name+'_+_junctiosn_statistics.csv')

# NEGATIVE STRAND
junctions_file = pd.read_csv(input_name+'_-_junction_spanning.csv')
junctions_file = junctions_file.drop('Unnamed: 0', axis = 1)

# TOTAL JUNCTIONS COVERED BY COMBO OF ALL ENZYMES IN PARALLEL
# number of junctions whithout duplicates - each junction counted once
all_junction_ids = len(set(junctions_file['intron_id']))

#Number of junction covering peptides generated by each enzyme
junction_statistics = pd.DataFrame()
enzymelist = []
total_pept = []
for enzyme in set(junctions_file['enzyme']):
    enzymecheck = junctions_file.apply(lambda x: True if x['enzyme'] == enzyme else False, axis =1)
    enzyme_total = len(enzymecheck[enzymecheck==True])
    enzymelist.append(enzyme)
    total_pept.append(enzyme_total)
junction_statistics['enzyme'] = enzymelist
junction_statistics['junction_spanning_peptides'] = total_pept

for enzyme in set(junctions_file['enzyme']):
    enzymecheck = junctions_file.apply(lambda x: True if x['enzyme'] == enzyme else False, axis =1)
    enzyme_total = len(enzymecheck[enzymecheck==True])
    #print (enzyme, 'has', enzyme_total, 'junction-covering peptides')

#Junctions covered by each separate enzyme
indexed_file = junctions_file.set_index('enzyme')

newlist = []
for enzyme in enzymelist:
    by_enzyme = indexed_file.loc[[enzyme]]
    newlist.append(by_enzyme['intron_id'].tolist())

#for index, (introns, enzyme) in enumerate(zip(newlist, enzymelist)):
#    print('The peptides generated by', enzyme, 'cover a total of', len(set(introns)), 'junctions')

junctions = []
for introns in newlist:
    junctions.append(len(set(introns)))

junction_statistics['unique_junctions_covered'] = junctions

#Real number of exon-exon junctions in the proteins being examined
negstrand_cdsdf = pd.read_csv(chromosome+'_-_cdsdf.csv')
negstrand_cdsdf = negstrand_cdsdf[negstrand_cdsdf.intron_id != 'na']

#print('there are a total of', len(set(cdsdf['intron_id'])),
# 'exon-exon junctions in the observed proteins')

#Adding column for % of junctions covered, out of the available
# junctions in the proteins
junction_statistics['junction_coverage'] = junction_statistics['unique_junctions_covered']/(len(set(negstrand_cdsdf['intron_id']))) *100
junction_statistics.to_csv(input_name+'_-_junction_statistics.csv')